{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputaValue","setInputaValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAiBA,OAEI,uBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAYK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAe,MAOnB,UACI,8CACA,uBACIO,KAAK,OACLC,MAAST,EACTU,SAtBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,QAsBhBG,YAAa,4B,+BC5BhBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAIEA,EAAIC,OAJN,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,2DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECJwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAI3B,CAACpB,IAEIqB,EDhBuBK,CAAa1B,GAA/Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAGnB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,8BACI,oBAAIA,UAAU,YAAd,SAEQH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEKA,GADCA,EAAIC,eEjBrBgB,EAAe,WAGxB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAUA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ4C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCvB7B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3585c4b9.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    \n    const [inputaValue, setInputaValue] = useState('');//si no le pongo nada seria undefine\n\n    const handleInputChange = (e) =>{\n        setInputaValue(e.target.value);\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n\n        if(inputaValue.trim().length > 2){\n            // console.log('submit Echo')\n            setCategories(cats => [inputaValue,...cats]);\n            setInputaValue('');\n        }\n\n    }\n\n    return (\n\n        <form onSubmit={handleSubmit}>\n            <h2>Add category</h2>\n            <input\n                type=\"text\"\n                value = {inputaValue}\n                onChange={handleInputChange}\n                placeholder =\"Introduce un Nombre\"\n            />\n\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async(category) =>{\n        \n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=yw33JdH0FxRDYs8aYc8I5cu9RJ3JezXQ`;    \n    const res = await fetch(url);\n    const {data} = await res.json();\n\n    const gifs = data.map(img => {\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url //signo de interrogacion para saber si tiene imagenes\n        }\n    })\n\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n\n    return (\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images,loading} = useFetchGifs(category);\n\n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n       \n        <div>\n            <ol className=\"card-grid\">\n                {\n                    images.map((img) =>(\n                        <GifGridItem \n                        key= {img.id}\n                         {...img}\n                        />\n                    ))\n                }\n            </ol>\n        </div>\n        </>\n    )\n}\n","import { useState,useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifts\";\n\nexport const useFetchGifs = (category) => {\n   \n    const [state, setState] = useState({\n        data:[],\n        loading: true\n    });\n\n    useEffect(() =>{\n\n        getGifs(category)\n            .then(imgs => {\n\n                    setState({\n                        data: imgs,\n                        loading: false\n                    });\n            })\n\n    },[category])\n\n    return state;\n}\n","import React, {useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () =>{\n\n    // const categories = ['One punch','Samurai x','Dragon Ball'];\n    const [categories, setCategories] = useState(['One punch']);\n\n    // const handleAdd = () =>{\n        // ['One Piece',...categories] ponerlo primero\n        // setCategoreies(cats => [...cats,'One Piece']);\n    //       setCategories([...categories,'One Piece']);\n    // }\n\n\n\n    return(\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr/>\n\n\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid\n                        key={category}\n                        category={category}/>\n                    ))\n                }\n            </ol>\n        </>\n    );\n\n\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}